<h1>About</h1>
<p>國立虎尾科技大學機械設計工程系</p>
<p>National Formosa University</p>
<p>Department of Mechanical Design Engineering</p>
<p>cp2024 計算機程式</p>
<p>課程教材:</p>
<p style="padding-left: 30px;"><a href="https://blog.jupyter.org/introducing-learn-python-with-jupyter-11214f152159">Learn Python with Jupyter</a> (<a href="https://www.learnpythonwithjupyter.com/">site</a>, <a href="https://localhost:9445/downloads/learn_python_with_jupyter.pdf">ebook</a>)</p>
<p style="padding-left: 30px;">教育版帳號 microsoftonline 登入點: <a href="https://login.microsoftonline.com/">https://login.microsoftonline.com/</a></p>
<p>Teams 線上教學:</p>
<p style="padding-left: 30px;">以 "學號@nfu.edu.tw" 登入 <a href="https://login.microsoftonline.com/">https://login.microsoftonline.com/</a> Office 365</p>
<p style="padding-left: 30px;">Teams 團隊代碼: <span class="fui-Text ___vec8h90 fk6fouc f1pbo8a8 f1i3iumi figsok6 fpgzoln f1w7gpdv f6juhto f1mtd64y f1y7q3j9 f2jf649 foxqkq2" data-tid="join-team-code">ldodwua</span></p>
<p>個人倉儲:</p>
<p>https://github.com/mdecp2024/mdecp2024-hw-cp2024_hw</p>
<p>個人網站:</p>
<p>https://potential-engine-5g4xpwjvvpgxfr47-8081.app.github.dev/content/index.html</p>
<p>其他資訊:</p>
<p style="padding-left: 30px;"><a href="/downloads/cd2023_pj3ag4_zmq_football_4.7.7z">cd2023_pj3ag4_zmq_football_4.7.7z</a></p>
<p style="padding-left: 30px;"><a href="https://localhost:9446/downloads/cd2024_2b_g6_steel_ball_platform_nxopen_copsim.7z">cd2024_2b_g6_steel_ball_platform_nxopen_copsim.7z</a></p>
<h1>Attendance</h1>
<p>出席 (10%) - 自行舉證評分</p>
<p>自行利用 Github commits 提交記錄評分.</p>
<h1>HW 1</h1>
<h4>主題: 基於瀏覽器的分散式版次管理與整合程式開發環境 (10%)<span style="background-color: #ffff99;"><br/></span></h4>
<p style="padding-left: 30px;">USB 隨身碟:</p>
<p style="padding-left: 60px;">下載 <a href="http://229.cycu.org/python_2025_lite.7z">python_2025_lite.7z</a> (428 MB, 解開壓縮後約 1.5 GB)</p>
<p style="padding-left: 30px;"><a href="https://mde.tw/cp2024/content/Jupyter.html">Jupyter</a></p>
<p style="padding-left: 30px;">What are Github and Codespaces?</p>
<p style="padding-left: 60px;"><a href="https://docs.github.com/en/get-started/start-your-journey/hello-world">Hello World - GitHub Docs</a></p>
<p style="padding-left: 30px;">利用包含學號的字串作為帳號, 申請免費使用 Github.</p>
<p style="padding-left: 30px;">Python 課程教材: <a href="https://www.learnpythonwithjupyter.com/">https://www.learnpythonwithjupyter.com/</a> - PART 1</p>
<hr/>
<p>PART 1: Creating the basics 資料整理 (10%)</p>
<p>啟動可攜程式系統後, 在命令列中:</p>
<p>y:\&gt;cd notebook</p>
<p>y:\notebook&gt;jupyter lab --collaborative</p>
<p>進入 <a href="/downloads/01_string_input_print.ipynb">01_string_input_print.ipynb</a> 練習如何修改 PART1 notebook 後存檔, 上傳至作業倉儲中的 downloads 目錄後, 透過 <a href="https://nbviewer.org/">https://nbviewer.org/</a> 將已經提交的 <a href="/downloads/01_string_input_print.ipynb">01_string_input_print.ipynb</a>, 嵌入下列網頁中.</p>
<p><iframe height="400" src="https://nbviewer.org/urls/mde.tw/cp2024_hw/downloads/01_string_input_print.ipynb" width="600"></iframe></p>
<p>上列 iframe 標註的 html 語法:</p>
<pre class="brush:html;auto-links:false;toolbar:false" contenteditable="false">&lt;iframe width="600" height="400" src="https://nbviewer.org/urls/mde.tw/cp2024_hw/downloads/01_string_input_print.ipynb"&gt;&lt;/iframe&gt;</pre>
<p>完成上述流程整理後, 請將 HW1 自評分數輸入 cp2024 自評表單中.</p>
<h2>HW 1 Exam</h2>
<p>每六人為一組進行協同程式練習</p>
<p>透過 Jupyterlab 協同網頁, 輪流指定各組編寫 Topic 1 相關的程式練習, 以及網頁內容 (localhost 與 Codespaces 環境)編輯.</p>
<h3>w7</h3>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen="allowfullscreen" frameborder="0" height="315" referrerpolicy="strict-origin-when-cross-origin" src="https://www.youtube.com/embed/bbJFqhXaXxk?si=nRrlqXBRZyqoDELk" title="YouTube video player" width="560"></iframe></p>
<h3>w10</h3>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen="allowfullscreen" frameborder="0" height="315" referrerpolicy="strict-origin-when-cross-origin" src="https://www.youtube.com/embed/g5Tqu-S9qPU?si=V7Whaw6Vi6j-wTV6" title="YouTube video player" width="560"></iframe></p>
<p></p>
<p></p>
<p></p>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen="allowfullscreen" frameborder="0" height="315" referrerpolicy="strict-origin-when-cross-origin" src="https://www.youtube.com/embed/GSMrdKm5YWg?si=AqNjr8nAXCkVKTC9" title="YouTube video player" width="560"></iframe></p>
<p></p>
<p></p>
<p></p>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen="allowfullscreen" frameborder="0" height="315" referrerpolicy="strict-origin-when-cross-origin" src="https://www.youtube.com/embed/iErW02xykyA?si=WMXcMV2gCaiRJ8Q-" title="YouTube video player" width="560"></iframe></p>
<h3>w11_hw</h3>
<p>以下影片說明如何利用近端可攜系統維護個人作業網站:</p>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen="allowfullscreen" frameborder="0" height="315" referrerpolicy="strict-origin-when-cross-origin" src="https://www.youtube.com/embed/oOwxFH8ricM?si=VrsMOzA4i2sqQmVe" title="YouTube video player" width="560"></iframe></p>
<p>1.  已知可以用 Python 程式<a href="https://mde.tw/cp2024/content/Brython.html?src=https://gist.githubusercontent.com/mdecycu/5e6eda7a004c15fa7262b9a80bfa4af6/raw/c2225ac22f32ee8485a630b42cf3f4d8567bb661/up_to_down_pyramid.py">由上往下列印三角形 *</a>, 或<a href="https://mde.tw/cp2024/content/Brython.html?src=https://gist.githubusercontent.com/mdecycu/5e6eda7a004c15fa7262b9a80bfa4af6/raw/56793c72d4495d564e3cc6214ed5fb68dbd2b21d/left_to_right_pyramid.py">由左往右列印三角形 *</a>, 請將此程式延伸到可以在 10x10 的字元區域中, 以 "*" 字元列印出圓型區域. 完成後請將程式碼存入個人 Gist 後, 直接在個人作業網站中的 Brython 頁面中執行. (提示: ?src=gist_script_URL)</p>
<p>第一題 <a href="https://potential-engine-5g4xpwjvvpgxfr47-8081.app.github.dev/content/Brython.html?src=https://gist.githubusercontent.com/wadu0622/384aaf2e0f8da87e906b978796396576/raw/f7eba2410285db0486636450699d1360f82c389b/hw1.py">連結</a></p>
<p><a href="https://potential-engine-5g4xpwjvvpgxfr47-8081.app.github.dev/content/Brython.html?src=https://gist.githubusercontent.com/wadu0622/384aaf2e0f8da87e906b978796396576/raw/f7eba2410285db0486636450699d1360f82c389b/hw2.py"><span>2.</span><span> </span></a>已知可以在網頁中利用 Brython 繪製方格與塗色, 如下連結, 請設法修改此一程式, 直接將程式存入個人的 Gist, 並利用黑色方塊圍出一個圓形區域.</p>
<p>第二題  <a href="https://potential-engine-5g4xpwjvvpgxfr47-8081.app.github.dev/content/Brython.html?src=https://gist.githubusercontent.com/wadu0622/384aaf2e0f8da87e906b978796396576/raw/f7eba2410285db0486636450699d1360f82c389b/hw2.py" title="https://potential-engine-5g4xpwjvvpgxfr47-8081.app.github.dev/content/Brython.html?src=https://gist.githubusercontent.com/wadu0622/384aaf2e0f8da87e906b978796396576/raw/f7eba2410285db0486636450699d1360f82c389b/hw2.py">網頁上的方格與塗色</a></p>
<p>3. 完成上列題目後, 請利用 Youtube 影片<span>簡報</span>個人的解題過程與心得.</p>
<div>
<h3>w12_hw</h3>
<p>第一題:input(), and print()</p>
<p><span>input()範例程式:<a href="https://potential-engine-5g4xpwjvvpgxfr47-8081.app.github.dev/content/Brython.html?src=https://gist.githubusercontent.com/wadu0622/17ad8f6efaf63535359f62daf998c3c9/raw/343069d25c7aa99e961808750567fcad3f575e34/22114.py">What's your name?</a></span></p>
<p><span>print()範例程式:<a href="https://potential-engine-5g4xpwjvvpgxfr47-8081.app.github.dev/content/Brython.html?src=https://gist.githubusercontent.com/wadu0622/17ad8f6efaf63535359f62daf998c3c9/raw/343069d25c7aa99e961808750567fcad3f575e34/cat.py">cat</a></span></p>
<h3>w13 hw</h3>
<!-- 引入 Brython 程式庫 -->
<script src="/static/brython.js"></script>
<script src="/static/brython_stdlib.js"></script>
<!-- 啟動 Brython -->
<script>
window.onload = function() {
    brython({debug:1, pythonpath:['/static/', '../../downloads/py/']});
}
</script>
<!-- 設置容器 -->
<div id="brython div1"></div>
<!-- 利用 Brython 繪圖 -->
<script type="text/python">
from browser import html
from browser import document as doc

# 利用 HTML 建立 canvas 並定義特性
canvas = html.CANVAS(width=600, height=600)
brython_div = doc["brython div1"]
brython_div <= canvas
ctx = canvas.getContext("2d")

ctx.strokeStyle = 'red'  # 設定矩形的邊框顏色為紅色
ctx.beginPath()
ctx.rect(100, 100, 200, 200)  # 第一個正方形的左上角在(100, 100)，邊長200
ctx.rect(200, 200, 200, 200)  # 第二個正方形的左上角在(200, 200)，邊長200
ctx.stroke()

# 2. 繪製對角線 (藍色) - 只連接第一個矩形的左上角和第一個矩形的右下角
ctx.strokeStyle = 'blue'  # 設定對角線顏色為藍色
ctx.beginPath()
ctx.moveTo(100, 100)  # 起點為第一個矩形的左上角 (100, 100)
ctx.lineTo(300, 300)  # 終點為第一個矩形的右下角 (300, 300)
ctx.stroke()

# 3. 繪製兩個外切圓 (黑色)
ctx.strokeStyle = 'black'  # 設定圓的顏色為黑色

# 第一個矩形的外切圓
ctx.beginPath()
ctx.arc(200, 200, 141.4, 0, 2 * 3.14)  # 圓心在(200, 200)，半徑為141.4（sqrt(2) * 邊長的一半）
ctx.stroke()

# 第二個矩形的外切圓
ctx.beginPath()
ctx.arc(300, 300, 141.4, 0, 2 * 3.14)  # 圓心在(300, 300)，半徑為141.4
ctx.stroke()
</script>
<h3>w15 hw</h3>
<p style="text-align: left;"><span>w15,題目一:  以"從 1 累加到 100"作為 anchor 的連結標題:<a href="https://potential-engine-5g4xpwjvvpgxfr47-8081.app.github.dev/content/Brython.html?src=https://gist.githubusercontent.com/wadu0622/04d4715fc00d7c3cacdb6962a3b5577f/raw/e0ad77db748b96eb83b380bc540b947ad132f2e1/w15hw1.py">連結</a></span></p>
<p style="text-align: left;"><span>       題目二: 延伸上題, 設計一個函式 addto(1, 100), 可以完成上述的累加結果."<a href="https://potential-engine-5g4xpwjvvpgxfr47-8081.app.github.dev/content/Brython.html?src=https://gist.githubusercontent.com/wadu0622/392d1475d94eb5bb367ee1a7b3683628/raw/aa208a5a4b9335207416bf759053cbcc68f7e7f7/w15hw2.py">addto</a>"</span></p>
<p style="text-align: left;"><span>       題目三: 延伸上題, 設計一個函式 add_only_even(1, 100), 可以完成從第一個輸入整數, 累加到第二個輸入變數         的累加結果.''<a href="https://potential-engine-5g4xpwjvvpgxfr47-8081.app.github.dev/content/Brython.html?src=https://gist.githubusercontent.com/wadu0622/719d4e0728b16aa89350f8e2f38ce980/raw/25898af19b0523c8edcd51e1ffd3799d798d93dd/w15hw3.py">add_only_even</a>''</span></p>
<p style="text-align: left;"><span>       題目四: 延伸上題, 設計一個函式 add_avoid_8(1, 100), 可以完成從第一個輸入整數, 累加到第二個輸入變數的         累加過程, 必須避開數字出現"8"的整數."<a href="https://potential-engine-5g4xpwjvvpgxfr47-8081.app.github.dev/content/Brython.html?src=https://gist.githubusercontent.com/wadu0622/bc212ba1b56894cea4e9dafec9964c23/raw/7fbe5987996d6c6841d194b107d10b7d23a01358/w15hw4.py">add_avoid_8</a>"</span></p>
<h3>w14_ex</h3>
<p>請根據兩個圓繪圖所圍成的<a href="https://mde.tw/cp2024/content/Brython.html?src=https://gist.githubusercontent.com/mdecycu/5eca62565d509668d731720f1994e127/raw/0e370b2ad0c429ab4c8905244022c27cfca8cfba/two_cicle_fill_ex1.py">區域</a>(目前圍成三個區域, 但若圓心移動可能彼此獨立)進行不同顏色著色, 條件是當各圓半徑與圓心座標變動時, 程式只需輸入兩個圓的圓心座標與半徑, 就可以完成各區域的著色任務.</p>
<p><a href="https://mde.tw/cp2024/content/Brython.html?src=https://gist.githubusercontent.com/mdecycu/5eca62565d509668d731720f1994e127/raw/a9d887546e024d52d16c228a6657146580342746/two_cicle_section_fill_ex.py">參考範例</a></p>
<p><a href="https://mde.tw/cp2024/content/Brython.html?src=https://gist.githubusercontent.com/mdecycu/5eca62565d509668d731720f1994e127/raw/7a086162a04783664bf64d9abd49da059634a0b4/multiple_circle_interaction_fill.py">多個圓相交區域著色範例</a></p>
<p>以下為參考範例的詳細說明, 請根據此一程式架構, 修改為三個圓的區域塗色任務.</p>
<div>
<div class="syntaxhighlighter py" id="highlighter_150485">
<table border="0" cellpadding="0" cellspacing="0">
<tbody>
<tr>
<td class="gutter">
<div class="line number1 index0 alt2">1</div>
<div class="line number2 index1 alt1">2</div>
<div class="line number3 index2 alt2">3</div>
<div class="line number4 index3 alt1">4</div>
<div class="line number5 index4 alt2">5</div>
<div class="line number6 index5 alt1">6</div>
<div class="line number7 index6 alt2">7</div>
<div class="line number8 index7 alt1">8</div>
<div class="line number9 index8 alt2">9</div>
<div class="line number10 index9 alt1">10</div>
<div class="line number11 index10 alt2">11</div>
<div class="line number12 index11 alt1">12</div>
<div class="line number13 index12 alt2">13</div>
<div class="line number14 index13 alt1">14</div>
<div class="line number15 index14 alt2">15</div>
<div class="line number16 index15 alt1">16</div>
<div class="line number17 index16 alt2">17</div>
<div class="line number18 index17 alt1">18</div>
<div class="line number19 index18 alt2">19</div>
<div class="line number20 index19 alt1">20</div>
<div class="line number21 index20 alt2">21</div>
<div class="line number22 index21 alt1">22</div>
<div class="line number23 index22 alt2">23</div>
<div class="line number24 index23 alt1">24</div>
<div class="line number25 index24 alt2">25</div>
<div class="line number26 index25 alt1">26</div>
<div class="line number27 index26 alt2">27</div>
<div class="line number28 index27 alt1">28</div>
<div class="line number29 index28 alt2">29</div>
<div class="line number30 index29 alt1">30</div>
<div class="line number31 index30 alt2">31</div>
<div class="line number32 index31 alt1">32</div>
<div class="line number33 index32 alt2">33</div>
<div class="line number34 index33 alt1">34</div>
<div class="line number35 index34 alt2">35</div>
<div class="line number36 index35 alt1">36</div>
<div class="line number37 index36 alt2">37</div>
<div class="line number38 index37 alt1">38</div>
<div class="line number39 index38 alt2">39</div>
<div class="line number40 index39 alt1">40</div>
<div class="line number41 index40 alt2">41</div>
<div class="line number42 index41 alt1">42</div>
<div class="line number43 index42 alt2">43</div>
<div class="line number44 index43 alt1">44</div>
<div class="line number45 index44 alt2">45</div>
<div class="line number46 index45 alt1">46</div>
<div class="line number47 index46 alt2">47</div>
<div class="line number48 index47 alt1">48</div>
<div class="line number49 index48 alt2">49</div>
<div class="line number50 index49 alt1">50</div>
<div class="line number51 index50 alt2">51</div>
<div class="line number52 index51 alt1">52</div>
<div class="line number53 index52 alt2">53</div>
<div class="line number54 index53 alt1">54</div>
<div class="line number55 index54 alt2">55</div>
<div class="line number56 index55 alt1">56</div>
<div class="line number57 index56 alt2">57</div>
<div class="line number58 index57 alt1">58</div>
<div class="line number59 index58 alt2">59</div>
<div class="line number60 index59 alt1">60</div>
<div class="line number61 index60 alt2">61</div>
<div class="line number62 index61 alt1">62</div>
<div class="line number63 index62 alt2">63</div>
<div class="line number64 index63 alt1">64</div>
<div class="line number65 index64 alt2">65</div>
<div class="line number66 index65 alt1">66</div>
<div class="line number67 index66 alt2">67</div>
<div class="line number68 index67 alt1">68</div>
<div class="line number69 index68 alt2">69</div>
<div class="line number70 index69 alt1">70</div>
<div class="line number71 index70 alt2">71</div>
<div class="line number72 index71 alt1">72</div>
<div class="line number73 index72 alt2">73</div>
<div class="line number74 index73 alt1">74</div>
<div class="line number75 index74 alt2">75</div>
<div class="line number76 index75 alt1">76</div>
<div class="line number77 index76 alt2">77</div>
<div class="line number78 index77 alt1">78</div>
<div class="line number79 index78 alt2">79</div>
<div class="line number80 index79 alt1">80</div>
<div class="line number81 index80 alt2">81</div>
<div class="line number82 index81 alt1">82</div>
<div class="line number83 index82 alt2">83</div>
<div class="line number84 index83 alt1">84</div>
<div class="line number85 index84 alt2">85</div>
<div class="line number86 index85 alt1">86</div>
<div class="line number87 index86 alt2">87</div>
<div class="line number88 index87 alt1">88</div>
<div class="line number89 index88 alt2">89</div>
<div class="line number90 index89 alt1">90</div>
<div class="line number91 index90 alt2">91</div>
<div class="line number92 index91 alt1">92</div>
<div class="line number93 index92 alt2">93</div>
<div class="line number94 index93 alt1">94</div>
<div class="line number95 index94 alt2">95</div>
<div class="line number96 index95 alt1">96</div>
<div class="line number97 index96 alt2">97</div>
<div class="line number98 index97 alt1">98</div>
<div class="line number99 index98 alt2">99</div>
<div class="line number100 index99 alt1">100</div>
<div class="line number101 index100 alt2">101</div>
<div class="line number102 index101 alt1">102</div>
<div class="line number103 index102 alt2">103</div>
<div class="line number104 index103 alt1">104</div>
<div class="line number105 index104 alt2">105</div>
<div class="line number106 index105 alt1">106</div>
<div class="line number107 index106 alt2">107</div>
</td>
<td class="code">
<div class="container">
<div class="line number1 index0 alt2"><code class="py keyword">from</code> <code class="py plain">browser </code><code class="py keyword">import</code> <code class="py plain">html</code></div>
<div class="line number2 index1 alt1"><code class="py keyword">from</code> <code class="py plain">browser </code><code class="py keyword">import</code> <code class="py plain">document as doc</code></div>
<div class="line number3 index2 alt2"><code class="py keyword">import</code> <code class="py plain">random</code></div>
<div class="line number4 index3 alt1"><code class="py keyword">import</code> <code class="py plain">math</code></div>
<div class="line number5 index4 alt2"> </div>
<div class="line number6 index5 alt1"><code class="py comments"># 定義一個函式來初始化畫布</code></div>
<div class="line number7 index6 alt2"><code class="py keyword">def</code> <code class="py plain">initialize_canvas(canvas_width</code><code class="py keyword">=</code><code class="py value">400</code><code class="py plain">, canvas_height</code><code class="py keyword">=</code><code class="py value">400</code><code class="py plain">, </code><code class="py functions">id</code><code class="py keyword">=</code><code class="py string">"brython_div1"</code><code class="py plain">):</code></div>
<div class="line number8 index7 alt1"><code class="py spaces">    </code><code class="py comments">"""</code></div>
<div class="line number9 index8 alt2"><code class="py spaces">    </code><code class="py comments">初始化畫布，創建一個指定大小的 Canvas 元素，並將其加到 HTML 文件中。</code></div>
<div class="line number10 index9 alt1"><code class="py spaces">    </code><code class="py comments">返回畫布元素和它的 2D 繪圖上下文。</code></div>
<div class="line number11 index10 alt2"><code class="py spaces">    </code><code class="py comments">"""</code></div>
<div class="line number12 index11 alt1"><code class="py spaces">    </code><code class="py comments"># 創建一個 canvas 元素，並設置其寬度與高度</code></div>
<div class="line number13 index12 alt2"><code class="py spaces">    </code><code class="py plain">canvas </code><code class="py keyword">=</code> <code class="py plain">html.CANVAS(width</code><code class="py keyword">=</code><code class="py plain">canvas_width, height</code><code class="py keyword">=</code><code class="py plain">canvas_height)</code></div>
<div class="line number14 index13 alt1"><code class="py spaces">    </code><code class="py comments"># 將創建的 canvas 元素添加到指定的 HTML div 元素中</code></div>
<div class="line number15 index14 alt2"><code class="py spaces">    </code><code class="py plain">brython_div </code><code class="py keyword">=</code> <code class="py plain">doc[</code><code class="py functions">id</code><code class="py plain">]  </code><code class="py comments"># 獲取指定 id 的 div 元素</code></div>
<div class="line number16 index15 alt1"><code class="py spaces">    </code><code class="py plain">brython_div &lt;</code><code class="py keyword">=</code> <code class="py plain">canvas  </code><code class="py comments"># 將 canvas 插入到該 div 中</code></div>
<div class="line number17 index16 alt2"><code class="py spaces">    </code> </div>
<div class="line number18 index17 alt1"><code class="py spaces">    </code><code class="py comments"># 獲取 canvas 的 2D 繪圖上下文，這是進行繪圖的主要接口</code></div>
<div class="line number19 index18 alt2"><code class="py spaces">    </code><code class="py plain">ctx </code><code class="py keyword">=</code> <code class="py plain">canvas.getContext(</code><code class="py string">"2d"</code><code class="py plain">)</code></div>
<div class="line number20 index19 alt1"><code class="py spaces">    </code> </div>
<div class="line number21 index20 alt2"><code class="py spaces">    </code><code class="py comments"># 返回畫布和它的 2D 繪圖上下文</code></div>
<div class="line number22 index21 alt1"><code class="py spaces">    </code><code class="py keyword">return</code> <code class="py plain">canvas, ctx</code></div>
<div class="line number23 index22 alt2"> </div>
<div class="line number24 index23 alt1"><code class="py comments"># 定義一個隨機顏色生成函式</code></div>
<div class="line number25 index24 alt2"><code class="py keyword">def</code> <code class="py plain">random_color_generator():</code></div>
<div class="line number26 index25 alt1"><code class="py spaces">    </code><code class="py comments">"""</code></div>
<div class="line number27 index26 alt2"><code class="py spaces">    </code><code class="py comments">生成一個隨機的 RGB 顏色字符串。</code></div>
<div class="line number28 index27 alt1"><code class="py spaces">    </code><code class="py comments">返回的顏色是 "rgb(r, g, b)" 格式，其中 r, g, b 是 0 到 255 之間的隨機整數。</code></div>
<div class="line number29 index28 alt2"><code class="py spaces">    </code><code class="py comments">"""</code></div>
<div class="line number30 index29 alt1"><code class="py spaces">    </code><code class="py plain">r </code><code class="py keyword">=</code> <code class="py plain">random.randint(</code><code class="py value">0</code><code class="py plain">, </code><code class="py value">255</code><code class="py plain">)  </code><code class="py comments"># 隨機生成紅色成分 (0-255)</code></div>
<div class="line number31 index30 alt2"><code class="py spaces">    </code><code class="py plain">g </code><code class="py keyword">=</code> <code class="py plain">random.randint(</code><code class="py value">0</code><code class="py plain">, </code><code class="py value">255</code><code class="py plain">)  </code><code class="py comments"># 隨機生成綠色成分 (0-255)</code></div>
<div class="line number32 index31 alt1"><code class="py spaces">    </code><code class="py plain">b </code><code class="py keyword">=</code> <code class="py plain">random.randint(</code><code class="py value">0</code><code class="py plain">, </code><code class="py value">255</code><code class="py plain">)  </code><code class="py comments"># 隨機生成藍色成分 (0-255)</code></div>
<div class="line number33 index32 alt2"><code class="py spaces">    </code><code class="py keyword">return</code> <code class="py plain">f</code><code class="py string">"rgb({r}, {g}, {b})"</code>  <code class="py comments"># 返回隨機顏色字符串</code></div>
<div class="line number34 index33 alt1"> </div>
<div class="line number35 index34 alt2"><code class="py comments"># 判斷點 (px, py) 是否在圓內</code></div>
<div class="line number36 index35 alt1"><code class="py keyword">def</code> <code class="py plain">is_point_in_circle(px, py, cx, cy, r):</code></div>
<div class="line number37 index36 alt2"><code class="py spaces">    </code><code class="py comments">"""</code></div>
<div class="line number38 index37 alt1"><code class="py spaces">    </code><code class="py comments">判斷一個點 (px, py) 是否位於圓 (cx, cy, r) 內。</code></div>
<div class="line number39 index38 alt2"><code class="py spaces">    </code><code class="py comments">(cx, cy) 為圓心坐標，r 為圓的半徑。</code></div>
<div class="line number40 index39 alt1"><code class="py spaces">    </code><code class="py comments">"""</code></div>
<div class="line number41 index40 alt2"><code class="py spaces">    </code><code class="py comments"># 使用圓的方程 (px - cx)² + (py - cy)² &lt;= r² 判斷點是否在圓內</code></div>
<div class="line number42 index41 alt1"><code class="py spaces">    </code><code class="py keyword">return</code> <code class="py plain">(px </code><code class="py keyword">-</code> <code class="py plain">cx) </code><code class="py keyword">*</code><code class="py keyword">*</code> <code class="py value">2</code> <code class="py keyword">+</code> <code class="py plain">(py </code><code class="py keyword">-</code> <code class="py plain">cy) </code><code class="py keyword">*</code><code class="py keyword">*</code> <code class="py value">2</code> <code class="py plain">&lt;</code><code class="py keyword">=</code> <code class="py plain">r </code><code class="py keyword">*</code><code class="py keyword">*</code> <code class="py value">2</code></div>
<div class="line number43 index42 alt2"> </div>
<div class="line number44 index43 alt1"><code class="py comments"># 使用者設定的圓心座標和半徑，並進行掃描線填充</code></div>
<div class="line number45 index44 alt2"><code class="py keyword">def</code> <code class="py plain">draw_circles(x1, y1, r1, x2, y2, r2):</code></div>
<div class="line number46 index45 alt1"><code class="py spaces">    </code><code class="py comments">"""</code></div>
<div class="line number47 index46 alt2"><code class="py spaces">    </code><code class="py comments">根據傳入的兩個圓的圓心和半徑，繪製圓形並使用掃描線算法填充區域。</code></div>
<div class="line number48 index47 alt1"><code class="py spaces">    </code><code class="py comments">x1, y1, r1 是圓1的圓心坐標和半徑</code></div>
<div class="line number49 index48 alt2"><code class="py spaces">    </code><code class="py comments">x2, y2, r2 是圓2的圓心坐標和半徑</code></div>
<div class="line number50 index49 alt1"><code class="py spaces">    </code><code class="py comments">"""</code></div>
<div class="line number51 index50 alt2"><code class="py spaces">    </code><code class="py comments"># 初始化畫布，創建並取得畫布和其 2D 上下文</code></div>
<div class="line number52 index51 alt1"><code class="py spaces">    </code><code class="py plain">canvas, ctx </code><code class="py keyword">=</code> <code class="py plain">initialize_canvas(</code><code class="py value">400</code><code class="py plain">, </code><code class="py value">400</code><code class="py plain">)</code></div>
<div class="line number53 index52 alt2"><code class="py spaces">    </code> </div>
<div class="line number54 index53 alt1"><code class="py spaces">    </code><code class="py comments"># 清空畫布，以便重新繪製</code></div>
<div class="line number55 index54 alt2"><code class="py spaces">    </code><code class="py plain">ctx.clearRect(</code><code class="py value">0</code><code class="py plain">, </code><code class="py value">0</code><code class="py plain">, canvas.width, canvas.height)</code></div>
<div class="line number56 index55 alt1"><code class="py spaces">    </code> </div>
<div class="line number57 index56 alt2"><code class="py spaces">    </code><code class="py comments"># 顏色區域存儲字典，存儲不同區域的顏色</code></div>
<div class="line number58 index57 alt1"><code class="py spaces">    </code><code class="py plain">color_dict </code><code class="py keyword">=</code> <code class="py plain">{}</code></div>
<div class="line number59 index58 alt2"> </div>
<div class="line number60 index59 alt1"><code class="py spaces">    </code><code class="py comments"># 使用掃描線方法填充區域，逐行掃描畫布上的每個像素</code></div>
<div class="line number61 index60 alt2"><code class="py spaces">    </code><code class="py keyword">for</code> <code class="py plain">py </code><code class="py keyword">in</code> <code class="py functions">range</code><code class="py plain">(</code><code class="py value">0</code><code class="py plain">, canvas.height):  </code><code class="py comments"># 遍歷每一行的 y 坐標</code></div>
<div class="line number62 index61 alt1"><code class="py spaces">        </code><code class="py comments"># 當前掃描線的顏色初始化為 None，後面會根據位置選擇顏色</code></div>
<div class="line number63 index62 alt2"><code class="py spaces">        </code><code class="py plain">current_color </code><code class="py keyword">=</code> <code class="py color1">None</code> </div>
<div class="line number64 index63 alt1"><code class="py spaces">        </code> </div>
<div class="line number65 index64 alt2"><code class="py spaces">        </code><code class="py comments"># 遍歷當前行中的每個像素點 (px, py)</code></div>
<div class="line number66 index65 alt1"><code class="py spaces">        </code><code class="py keyword">for</code> <code class="py plain">px </code><code class="py keyword">in</code> <code class="py functions">range</code><code class="py plain">(</code><code class="py value">0</code><code class="py plain">, canvas.width):  </code><code class="py comments"># 遍歷每一列的 x 坐標</code></div>
<div class="line number67 index66 alt2"><code class="py spaces">            </code><code class="py comments"># 判斷該點是否在圓1內</code></div>
<div class="line number68 index67 alt1"><code class="py spaces">            </code><code class="py plain">in_circle1 </code><code class="py keyword">=</code> <code class="py plain">is_point_in_circle(px, py, x1, y1, r1)</code></div>
<div class="line number69 index68 alt2"><code class="py spaces">            </code><code class="py comments"># 判斷該點是否在圓2內</code></div>
<div class="line number70 index69 alt1"><code class="py spaces">            </code><code class="py plain">in_circle2 </code><code class="py keyword">=</code> <code class="py plain">is_point_in_circle(px, py, x2, y2, r2)</code></div>
<div class="line number71 index70 alt2"><code class="py spaces">            </code> </div>
<div class="line number72 index71 alt1"><code class="py spaces">            </code><code class="py keyword">if</code> <code class="py plain">in_circle1 </code><code class="py keyword">and</code> <code class="py plain">in_circle2:</code></div>
<div class="line number73 index72 alt2"><code class="py spaces">                </code><code class="py comments"># 如果點同時在兩個圓內，則是交集區域</code></div>
<div class="line number74 index73 alt1"><code class="py spaces">                </code><code class="py keyword">if</code> <code class="py string">"intersection"</code> <code class="py keyword">not</code> <code class="py keyword">in</code> <code class="py plain">color_dict:</code></div>
<div class="line number75 index74 alt2"><code class="py spaces">                    </code><code class="py comments"># 如果還沒有為交集區域分配顏色，則分配一個隨機顏色</code></div>
<div class="line number76 index75 alt1"><code class="py spaces">                    </code><code class="py plain">color_dict[</code><code class="py string">"intersection"</code><code class="py plain">] </code><code class="py keyword">=</code> <code class="py plain">random_color_generator()</code></div>
<div class="line number77 index76 alt2"><code class="py spaces">                </code><code class="py comments"># 設置當前掃描線的顏色為交集區域的顏色</code></div>
<div class="line number78 index77 alt1"><code class="py spaces">                </code><code class="py plain">current_color </code><code class="py keyword">=</code> <code class="py plain">color_dict[</code><code class="py string">"intersection"</code><code class="py plain">]</code></div>
<div class="line number79 index78 alt2"><code class="py spaces">            </code><code class="py keyword">elif</code> <code class="py plain">in_circle1:</code></div>
<div class="line number80 index79 alt1"><code class="py spaces">                </code><code class="py comments"># 如果點只在圓1內，則是圓1的區域</code></div>
<div class="line number81 index80 alt2"><code class="py spaces">                </code><code class="py keyword">if</code> <code class="py string">"circle1"</code> <code class="py keyword">not</code> <code class="py keyword">in</code> <code class="py plain">color_dict:</code></div>
<div class="line number82 index81 alt1"><code class="py spaces">                    </code><code class="py comments"># 如果還沒有為圓1分配顏色，則分配一個隨機顏色</code></div>
<div class="line number83 index82 alt2"><code class="py spaces">                    </code><code class="py plain">color_dict[</code><code class="py string">"circle1"</code><code class="py plain">] </code><code class="py keyword">=</code> <code class="py plain">random_color_generator()</code></div>
<div class="line number84 index83 alt1"><code class="py spaces">                </code><code class="py comments"># 設置當前掃描線的顏色為圓1區域的顏色</code></div>
<div class="line number85 index84 alt2"><code class="py spaces">                </code><code class="py plain">current_color </code><code class="py keyword">=</code> <code class="py plain">color_dict[</code><code class="py string">"circle1"</code><code class="py plain">]</code></div>
<div class="line number86 index85 alt1"><code class="py spaces">            </code><code class="py keyword">elif</code> <code class="py plain">in_circle2:</code></div>
<div class="line number87 index86 alt2"><code class="py spaces">                </code><code class="py comments"># 如果點只在圓2內，則是圓2的區域</code></div>
<div class="line number88 index87 alt1"><code class="py spaces">                </code><code class="py keyword">if</code> <code class="py string">"circle2"</code> <code class="py keyword">not</code> <code class="py keyword">in</code> <code class="py plain">color_dict:</code></div>
<div class="line number89 index88 alt2"><code class="py spaces">                    </code><code class="py comments"># 如果還沒有為圓2分配顏色，則分配一個隨機顏色</code></div>
<div class="line number90 index89 alt1"><code class="py spaces">                    </code><code class="py plain">color_dict[</code><code class="py string">"circle2"</code><code class="py plain">] </code><code class="py keyword">=</code> <code class="py plain">random_color_generator()</code></div>
<div class="line number91 index90 alt2"><code class="py spaces">                </code><code class="py comments"># 設置當前掃描線的顏色為圓2區域的顏色</code></div>
<div class="line number92 index91 alt1"><code class="py spaces">                </code><code class="py plain">current_color </code><code class="py keyword">=</code> <code class="py plain">color_dict[</code><code class="py string">"circle2"</code><code class="py plain">]</code></div>
<div class="line number93 index92 alt2"><code class="py spaces">            </code><code class="py keyword">else</code><code class="py plain">:</code></div>
<div class="line number94 index93 alt1"><code class="py spaces">                </code><code class="py comments"># 如果點不在任何圓內，則是背景區域</code></div>
<div class="line number95 index94 alt2"><code class="py spaces">                </code><code class="py plain">current_color </code><code class="py keyword">=</code> <code class="py string">"white"</code>  <code class="py comments"># 背景色設為白色</code></div>
<div class="line number96 index95 alt1"> </div>
<div class="line number97 index96 alt2"><code class="py spaces">            </code><code class="py comments"># 設置當前像素的顏色並進行填充</code></div>
<div class="line number98 index97 alt1"><code class="py spaces">            </code><code class="py plain">ctx.fillStyle </code><code class="py keyword">=</code> <code class="py plain">current_color</code></div>
<div class="line number99 index98 alt2"><code class="py spaces">            </code><code class="py comments"># 填充當前像素 (px, py)，並且寬度和高度均為 1 像素</code></div>
<div class="line number100 index99 alt1"><code class="py spaces">            </code><code class="py plain">ctx.fillRect(px, py, </code><code class="py value">1</code><code class="py plain">, </code><code class="py value">1</code><code class="py plain">)  </code><code class="py comments"># 填充一個像素</code></div>
<div class="line number101 index100 alt2"> </div>
<div class="line number102 index101 alt1"><code class="py comments"># 直接設定圓心和半徑</code></div>
<div class="line number103 index102 alt2"><code class="py plain">x1, y1, r1 </code><code class="py keyword">=</code> <code class="py value">150</code><code class="py plain">, </code><code class="py value">200</code><code class="py plain">, </code><code class="py value">100</code>  <code class="py comments"># 圓1：圓心 (150, 200)，半徑 100</code></div>
<div class="line number104 index103 alt1"><code class="py plain">x2, y2, r2 </code><code class="py keyword">=</code> <code class="py value">250</code><code class="py plain">, </code><code class="py value">200</code><code class="py plain">, </code><code class="py value">100</code>  <code class="py comments"># 圓2：圓心 (250, 200)，半徑 100</code></div>
<div class="line number105 index104 alt2"> </div>
<div class="line number106 index105 alt1"><code class="py comments"># 呼叫畫圓函式，並繪製兩個圓</code></div>
<div class="line number107 index106 alt2"><code class="py plain">draw_circles(x1, y1, r1, x2, y2, r2)</code></div>
</div>
</td>
</tr>
</tbody>
</table>
</div>
</div>
<div>
<div class="syntaxhighlighter py" id="highlighter_150485"></div>
</div>
<p></p>
<h1>HW 2</h1>
<h4>主題: Python 的數列、判斷式與重複迴圈 (20%)<span style="background-color: #ffff99;"><br/></span></h4>
<p style="padding-left: 30px;">Python 課程教材: <a href="https://www.learnpythonwithjupyter.com/">https://www.learnpythonwithjupyter.com/</a> - PART 2 and Part 3</p>
<hr/>
<p>延續 HW 1 網頁資料整理與程式練習方法, 整理下列內容 (20%):</p>
<p>PART 2: Introduction to lists and if/else statements</p>
<p>PART 3: Introduction to the for loop</p>
<p>完成上述流程整理後, 請將 HW2 自評分數輸入 cp2024 自評表單中.</p>
<h3>HW 2 Exam</h3>
<p>每六人為一組進行協同程式練習</p>
<p>透過 Jupyterlab 協同網頁, 輪流指定各組編寫 HW 2 相關的程式練習, 以及網頁內容 (localhost 與 Codespaces 環境)編輯.</p>
<h3>w16_exam1</h3>
<p><span>請以</span><span>自己的學號最後四碼</span><span>作為繪圖的座標原點</span></p>
<p>影片連結:<iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen="allowfullscreen" frameborder="0" height="315" referrerpolicy="strict-origin-when-cross-origin" src="https://www.youtube.com/embed/VZILcttgibk?si=QphyazasDzA4KtoM" title="YouTube video player" width="560"></iframe></p>
<p><a href="https://potential-engine-5g4xpwjvvpgxfr47-8081.app.github.dev/content/Brython.html?src=https://gist.githubusercontent.com/wadu0622/602cfce7301c699baf645c703b3ded49/raw/a7a9d24d1d784070d642ac90cd3b8fbab04d1fa1/w16hw1.py">anchor</a></p>
<pre class="brush:py;auto-links:false;toolbar:false" contenteditable="false">from browser import html
from browser import document as doc

# 利用 html 建立 canvas 超文件物件
canvas = html.CANVAS(width=500, height=500)
brython_div = doc["brython_div1"]
brython_div &lt;= canvas

# 取得 canvas 的繪圖上下文
ctx = canvas.getContext("2d")

# 畫出 X 軸
ctx.beginPath()
ctx.strokeStyle = 'black'
ctx.lineWidth = 2
ctx.moveTo(31, 20)  # 原點改為 (31, 20)
ctx.lineTo(400, 20)  # 向右延伸
ctx.stroke()

# 畫出 Y 軸
ctx.beginPath()
ctx.moveTo(31, 20)  # 原點改為 (31, 20)
ctx.lineTo(31, 400)  # 向下延伸
ctx.stroke()

# 標示原點座標
ctx.font = "12px Arial"
ctx.fillStyle = "black"
ctx.fillText("(31, 20)", 35, 33)

# 位移偏移量，將原點 (31, 20) 作為新的繪圖基準
offset_x = 31
offset_y = 20

# 畫橙色六邊形
ctx.beginPath()
ctx.fillStyle = "#F47920"
ctx.moveTo(offset_x + 40, offset_y + 43)
ctx.lineTo(offset_x + 60, offset_y + 13)
ctx.lineTo(offset_x + 90, offset_y + 13)
ctx.lineTo(offset_x + 110, offset_y + 43)
ctx.lineTo(offset_x + 90, offset_y + 63)
ctx.lineTo(offset_x + 60, offset_y + 63)
ctx.closePath()
ctx.fill()

# 畫綠色菱形
ctx.beginPath()
ctx.fillStyle = "#009F95"
ctx.moveTo(offset_x + 130, offset_y + 43)
ctx.lineTo(offset_x + 150, offset_y + 13)
ctx.lineTo(offset_x + 170, offset_y + 43)
ctx.lineTo(offset_x + 150, offset_y + 73)
ctx.closePath()
ctx.fill()

# 藍色三角形 (頂點在菱形右側，方向朝下)
ctx.beginPath()
ctx.fillStyle = "#40B4CB"
ctx.moveTo(offset_x + 174, offset_y + 43)  # 頂點在菱形右側
ctx.lineTo(offset_x + 154, offset_y + 73)  # 左下角
ctx.lineTo(offset_x + 194, offset_y + 73)  # 右下角
ctx.closePath()
ctx.fill()

# 畫粉紅色圓形
ctx.beginPath()
ctx.fillStyle = "#EB008B"
ctx.arc(offset_x + 220, offset_y + 43, 20, 0, 2 * 3.14159)
ctx.fill()

# 畫黃色正方形
ctx.beginPath()
ctx.fillStyle = "#FDD56A"
ctx.rect(offset_x + 260, offset_y + 23, 40, 40)
ctx.fill()

# 畫藍色矩形
ctx.beginPath()
ctx.fillStyle = "#003A70"
ctx.rect(offset_x + 320, offset_y + 33, 60, 20)
ctx.fill()
</pre>
<p></p>
<h1>HW 3</h1>
<h4>主題: Python 的數字、演算法與迴圈 (20%)</h4>
<p style="padding-left: 30px;">Python 課程教材: <a href="https://www.learnpythonwithjupyter.com/">https://www.learnpythonwithjupyter.com/</a> - PART 4 and Part 5</p>
<p>完成上述流程整理後, 請將 HW3 自評分數輸入 cp2024 自評表單中.</p>
<h2>HW 3 Exam</h2>
<p>每六人為一組進行協同程式練習</p>
<p>透過 Jupyterlab 協同網頁, 輪流指定各組編寫 HW 3 相關的程式練習, 以及網頁內容 (localhost 與 Codespaces 環境)編輯.</p>
<h3>w16_exam2</h3>
<p><a href="https://mdecp2024.github.io/hw-wadu0622/content/Brython.html?src=https://gist.githubusercontent.com/wadu0622/af9d4e15fe84a73c70514e1d4923f670/raw/2bace172dd9165f02dcfaeed6c6aede24b946a0e/w16exam2.py">anchor</a></p>
<p><span>影片連結:</span></p>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen="allowfullscreen" frameborder="0" height="315" referrerpolicy="strict-origin-when-cross-origin" src="https://www.youtube.com/embed/0qOYKnS0uug?si=FpPVGlKWXR-ijHoa" title="YouTube video player" width="560"></iframe></p><h1>HW 4</h1>
<h4>主題: 利用 Python 控制機電模擬系統 (20%)</h4>
<p style="padding-left: 30px;">利用 <a href="https://solvespace.com/">https://solvespace.com/</a> 建立機械系統零組件</p>
<p style="padding-left: 30px;">利用 <a href="https://www.coppeliarobotics.com/">CoppeliaSim</a> 建立機電模擬系統</p>
<p style="padding-left: 30px;">利用 <a href="https://manual.coppeliarobotics.com/en/zmqRemoteApiOverview.htm">Python</a> 跨網路控制瀏覽器上的機電模擬系統</p>
<p style="padding-left: 30px;">範例:</p>
<p style="padding-left: 60px;"><a href="/downloads/cd2023_pj3ag4_zmq_football_4.7.7z">cd2023_pj3ag4_zmq_football_4.7.7z</a></p>
<p style="padding-left: 60px;"><a href="https://localhost:9446/downloads/cd2024_2b_g6_steel_ball_platform_nxopen_copsim.7z">cd2024_2b_g6_steel_ball_platform_nxopen_copsim.7z</a></p>
<p>完成上述流程整理後, 請將 HW4 自評分數輸入 cp2024 自評表單中.</p>
<h2>HW 4 Exam</h2>
<p>每六人為一組進行協同程式練習</p>
<p>透過 Jupyterlab 協同網頁, 輪流指定各組編寫 HW 4 相關的程式練習, 以及網頁內容 (localhost 與 Codespaces 環境)編輯.</p>
<h3>w16_exam3</h3>
<p><a href="https://mdecp2024.github.io/hw-wadu0622/content/Brython.html?src=https://gist.githubusercontent.com/wadu0622/52958354c1b6f899497fa90139370617/raw/2b368fdb9b42211d45b853bc2ab2a61972b0d8ff/w16exam3.py">anchor</a></p>
<p><span>影片連結:</span></p>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen="allowfullscreen" frameborder="0" height="315" referrerpolicy="strict-origin-when-cross-origin" src="https://www.youtube.com/embed/YknT5gd7zZE?si=yHbTFW58HUFsCIBX" title="YouTube video player" width="560"></iframe></p><h1>Final Report</h1>
<p>期末口頭與書面專題報告 (20%)</p>
<p>期末口頭專題報告影片:</p>
<p style="padding-left: 30px;">......</p>
<p>期末書面專題報告檔案 (pdf):</p>
<p style="padding-left: 30px;">......</p>
<p>電腦輔助設計與實習課程總結心得:</p>
<p style="padding-left: 30px;">......</p>
<p>期末報告自評成績:</p>
<p style="padding-left: 30px;">完成上述流程後, 請將 Final Report 自評分數輸入 cp2024 自評表單中.</p>
<h1>Brython</h1>
<p>從 1 累加到 100:</p>
<p><button id="add1to100">1 add to 100</button></p>
<p><!-- 導入 brython 程式庫 --></p>
<p>
<script src="/static/brython.js"></script>
<script src="/static/brython_stdlib.js"></script>
</p>
<p><!-- 啟動 Brython --></p>
<p>
<script>
window.onload=function(){
brython({debug:1, pythonpath:['/static/','./../downloads/py/']});
}
</script>
</p>
<p><!-- 導入 FileSaver 與 filereader --></p>
<p>
<script src="/static/ace/FileSaver.min.js" type="text/javascript"></script>
<script src="/static/ace/filereader.js" type="text/javascript"></script>
</p>
<p><!-- 導入 ace --></p>
<p>
<script src="/static/ace/ace.js" type="text/javascript"></script>
<script src="/static/ace/ext-language_tools.js" type="text/javascript"></script>
<script src="/static/ace/mode-python3.js" type="text/javascript"></script>
<script src="/static/ace/snippets/python.js" type="text/javascript"></script>
</p>
<p><!-- 導入 gearUtils-0.9.js Cango 齒輪繪圖程式庫 -->
<script src="/static/Cango-24v03-min.js"></script>
<script src="/static/gearUtils-09.js"></script>
<script src="/static/SVGpathUtils-6v03-min.js"></script>
<script src="/static/sylvester.js"></script>
<script src="/static/PrairieDraw.js"></script>
</p>
<p><!-- 請注意, 這裡使用 Javascript 將 localStorage["kw_py_src1"] 中存在近端瀏覽器的程式碼, 由使用者決定存檔名稱--></p>
<p>
<script type="text/javascript">
function doSave(storage_id, filename){
    var blob = new Blob([localStorage[storage_id]], {type: "text/plain;charset=utf-8"});
    filename = document.getElementById(filename).value
    saveAs(blob, filename+".py");
}
</script>
</p>
<p>
<script type="text/python3">
from browser import document as doc
import ace
# 清除畫布
def clear_bd1(ev):
    bd = doc["brython_div1"]
    bd.clear()
Ace1 = ace.Editor(editor_id="kw_editor1", console_id="kw_console1", container_id="kw__container1", storage_id="kw_py_src1" )
# 從 gist 取出程式碼後, 放入 editor 作為 default 程式
def run1():
    # 利用 get 取下 src 變數值
    try:
        url = doc.query["src"]
    except:
        url = "https://gist.githubusercontent.com/mdecourse/0229a8a017091476a79700b8a190f185/raw/c3a6deaf717f8f2739a4b1392a5ab10936e9693a/from_1_add_to_10_1.py"
    prog = open(url).read()

    # 將程式載入編輯區
    Ace1.editor.setValue(prog)
    Ace1.editor.scrollToRow(0)
    Ace1.editor.gotoLine(0)
    # 直接執行程式
    #ns = {'__name__':'__main__'}
    #exec(prog, ns)
    # 按下 run 按鈕
    Ace1.run()

# 執行程式, 顯示輸出結果與清除輸出結果及對應按鈕綁定
doc['kw_run1'].bind('click', Ace1.run)
doc['kw_show_console1'].bind('click', Ace1.show_console)
doc['kw_clear_console1'].bind('click', Ace1.clear_console)
doc['clear_bd1'].bind('click', clear_bd1)
# 呼叫函式執行
run1()
</script>
</p>
<p><!-- add 1 to 100 開始 -->
<script type="text/python3">
from browser import document as doc
import ace

# 清除畫布
def clear_bd1(ev):
    bd = doc["brython_div1"]
    bd.clear()

# 利用 ace 中的 Editor 建立 Ace2 物件, 其中的輸入變數分別對應到頁面中的編輯區物件
Ace2 = ace.Editor(editor_id="kw_editor1", console_id="kw_console1", container_id="kw__container1", storage_id="kw_py_src1" )

add1to100_url = "https://gist.githubusercontent.com/mdecourse/0229a8a017091476a79700b8a190f185/raw/c48e37714f055c3a0027cbfef59e442a6ef659b9/from_1_add_to_100_1.py"

# 從 gist 取得程式碼
add_src = open(add1to100_url).read()
def add(ev):
    Ace2.editor.setValue(add_src)
    Ace2.editor.scrollToRow(0)
    Ace2.editor.gotoLine(0)
    Ace2.run()

# id 為 "add1to100" 的按鈕點按時, 執行 add 方法
doc["add1to100"].bind('click', add)
</script>
</p>
<p><!-- add 1 to 100 結束--></p>
<p><!-- editor1 開始 --></p>
<p><!-- 用來顯示程式碼的 editor 區域 --></p>
<div id="kw_editor1" style="width: 600px; height: 300px;"></div>
<p><!-- 以下的表單與按鈕與前面的 Javascript doSave 函式以及 FileSaver.min.js 互相配合 --></p>
<p><!-- 存擋表單開始 --></p>
<form><label>Filename: <input id="kw_filename" placeholder="input file name" type="text"/>.py</label> <input onclick="doSave('kw_py_src1', 'kw_filename1');" type="submit" value="Save"/></form>
<p><!-- 存擋表單結束 --></p>
<p></p>
<p><!-- 執行與清除按鈕開始 --></p>
<p><button id="kw_run1">Run</button> <button id="kw_show_console1">Output</button> <button id="kw_clear_console1">清除輸出區</button><button id="clear_bd1">清除繪圖區</button><button onclick="window.location.reload()">Reload</button></p>
<p><!-- 執行與清除按鈕結束 --></p>
<p></p>
<p><!-- 程式執行 ouput 區 --></p>
<div style="width: 100%; height: 100%;"><textarea autocomplete="off" id="kw_console1"></textarea></div>
<p><!-- Brython 程式執行的結果, 都以 brython_div1 作為切入位置 --></p>
<div id="brython_div1"></div>
<p><!-- editor1 結束 --></p>
<hr/>
<p><!-- ########################################## --></p>
<p>從 1 累加到 100 part2:</p>
<p><button id="add1to100part2">1 add to 100</button><button id="cango_three_gears">cango_three_gears</button><button id="bsnake">BSnake</button><button id="aitetris">AI Tetris</button><button id="threejsblock">Rotating Block</button></p>
<p><!-- 請注意, 這裡使用 Javascript 將 localStorage["kw_py_src2"] 中存在近端瀏覽器的程式碼, 由使用者決定存檔名稱--></p>
<p>
<script type="text/python3">
from browser import document as doc
import ace
# 清除畫布
def clear_bd2(ev):
    bd = doc["brython_div2"]
    bd.clear()
Ace3 = ace.Editor(editor_id="kw_editor2", console_id="kw_console2", container_id="kw__container2", storage_id="kw_py_src2" )
# 從 gist 取出程式碼後, 放入 editor 作為 default 程式
def run2():
    # 利用 get 取下 src 變數值
    try:
        url = doc.query["src2"]
    except:
        url = "https://gist.githubusercontent.com/mdecourse/0229a8a017091476a79700b8a190f185/raw/c3a6deaf717f8f2739a4b1392a5ab10936e9693a/from_1_add_to_10_1.py"
    prog = open(url).read()

    # 將程式載入編輯區
    Ace3.editor.setValue(prog)
    Ace3.editor.scrollToRow(0)
    Ace3.editor.gotoLine(0)
    # 直接執行程式
    #ns = {'__name__':'__main__'}
    #exec(prog, ns)
    # 按下 run 按鈕
    Ace3.run()

# 執行程式, 顯示輸出結果與清除輸出結果及對應按鈕綁定
doc['kw_run2'].bind('click', Ace3.run)
doc['kw_show_console2'].bind('click', Ace3.show_console)
doc['kw_clear_console2'].bind('click', Ace3.clear_console)
doc['clear_bd2'].bind('click', clear_bd2)
# 呼叫函式執行
run2()
</script>
</p>
<p><!-- add 1 to 100 part2 開始 -->
<script type="text/python3">
from browser import document as doc
import ace

# 清除畫布
def clear_bd2(ev):
    bd = doc["brython_div2"]
    bd.clear()

# 利用 ace 中的 Editor 建立 Ace2 物件, 其中的輸入變數分別對應到頁面中的編輯區物件
Ace4 = ace.Editor(editor_id="kw_editor2", console_id="kw_console2", container_id="kw__container2", storage_id="kw_py_src2" )

# 透過 Ace4 以類別建立一個通用的 button2, 可以在多個案例中將 gist 程導入編輯區

class button2:
    def __init__(self, url):
        self.url = url

    # 記得加入 event 輸入變數
    def do(self,ev):
        Ace4.editor.setValue(open(self.url).read())
        Ace4.editor.scrollToRow(0)
        Ace4.editor.gotoLine(0)
        Ace4.run()

add1to100_url = "https://gist.githubusercontent.com/mdecourse/0229a8a017091476a79700b8a190f185/raw/c48e37714f055c3a0027cbfef59e442a6ef659b9/from_1_add_to_100_1.py"

# 從 gist 取得程式碼
add_src = open(add1to100_url).read()
def add2(ev):
    Ace4.editor.setValue(add_src)
    Ace4.editor.scrollToRow(0)
    Ace4.editor.gotoLine(0)
    Ace4.run()

# id 為 "add1to100part2" 的按鈕點按時, 執行 add 方法
doc["add1to100part2"].bind('click', add2)
# 以下為運用 button2 class 的通用 gist 程式導入區
################################## cango_three_gears start
cango_three_gears_url = "https://gist.githubusercontent.com/mdecycu/d9082d678096bd58378d6afe2c7fa05d/raw/f7a85d737d6723d5e34c526d5daee990ed92c32b/cango_three_gears_brython_div2.py"
cango_three_gears = button2(cango_three_gears_url)
doc["cango_three_gears"].bind("click", cango_three_gears.do)
################################## cango_three_gears end
################################## bsnake start
bsnake_url = "https://gist.githubusercontent.com/mdecycu/d9082d678096bd58378d6afe2c7fa05d/raw/f7a85d737d6723d5e34c526d5daee990ed92c32b/kmol_snakey.py"
bsnake = button2(bsnake_url)
doc["bsnake"].bind("click", bsnake.do)
################################## bsnake end
################################## aitetris start
aitetris_url = "https://gist.githubusercontent.com/mdecycu/d9082d678096bd58378d6afe2c7fa05d/raw/f7a85d737d6723d5e34c526d5daee990ed92c32b/pygame_to_brython_tetris_ai.py"
aitetris = button2(aitetris_url)
doc["aitetris"].bind("click", aitetris.do)
################################## aitetris end
################################## threejsblock start
threejsblock_url = "https://gist.githubusercontent.com/mdecycu/2c6323eff49b496d1bafd210f3ec9707/raw/df37802f9e8a386b6424f7945af622b1cd0a9ca5/threejs_rotating_block.py"
threejsblock = button2(threejsblock_url)
doc["threejsblock"].bind("click", threejsblock.do)
################################## threejsblock end
</script>
</p>
<p><!-- add 1 to 100 part2 結束--></p>
<p><!-- editor2 開始 --></p>
<p><!-- 用來顯示程式碼的 editor 區域 --></p>
<div id="kw_editor2" style="width: 600px; height: 300px;"></div>
<p><!-- 以下的表單與按鈕與前面的 Javascript doSave 函式以及 FileSaver.min.js 互相配合 --></p>
<p><!-- 存擋表單開始 --></p>
<form><label>Filename: <input id="kw_filename2" placeholder="input file name" type="text"/>.py</label> <input onclick="doSave('kw_py_src2', 'kw_filename2');" type="submit" value="Save"/></form>
<p><!-- 存擋表單結束 --></p>
<p></p>
<p><!-- 執行與清除按鈕開始 --></p>
<p><button id="kw_run2">Run</button> <button id="kw_show_console2">Output</button> <button id="kw_clear_console2">清除輸出區</button><button id="clear_bd2">清除繪圖區</button><button onclick="window.location.reload()">Reload</button></p>
<p><!-- 執行與清除按鈕結束 --></p>
<p></p>
<p><!-- 程式執行 ouput 區 --></p>
<div style="width: 100%; height: 100%;"><textarea autocomplete="off" id="kw_console2"></textarea></div>
<p><!-- Brython 程式執行的結果, 都以 brython_div1 作為切入位置 --></p>
<div id="brython_div2"></div>
<p><!-- editor2 結束 --></p>
<hr/>
<p>
<script src="https://unpkg.com/three@0.144.0/build/three.js" type="text/javascript"></script>
</p>
</div>